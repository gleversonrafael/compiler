"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcompiler"] = self["webpackChunkcompiler"] || []).push([["managecourses"],{

/***/ "./js/basic/general/jsmenu.js":
/*!************************************!*\
  !*** ./js/basic/general/jsmenu.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/auth */ \"./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var _general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/jsfirebase.js */ \"./js/basic/general/jsfirebase.js\");\n/* harmony import */ var _jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsuserdata.js */ \"./js/basic/general/jsuserdata.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__]);\n_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\r\n\r\n\r\n\r\n\r\n// load defaults\r\ndocument.body.addEventListener(\"load\", loadDefaults());\r\n\r\n// toggle menu\r\ndocument.getElementById(\"menuIcon\").addEventListener(\"click\", () => { \r\n     toggleMenu(true, true);\r\n})\r\n\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n     let menuBox = document.getElementById(\"mMenuB\");\r\n     let leaveMenuButton = document.getElementById(\"leaveM\")\r\n\r\n     if(window.innerWidth >= 768 && menuBox.classList.contains(\"menuClosed\")) {\r\n          toggleMenu(true, false);\r\n     }\r\n\r\n     toggleLeaveMenuBox();\r\n\r\n})\r\n\r\n\r\n// leave menu and signout\r\ndocument.getElementById(\"leaveM\").addEventListener(\"click\", () => {\r\n     toggleMenu(true, true);\r\n});\r\n\r\ndocument.getElementById(\"signoutB\").addEventListener(\"click\", () => {\r\n     (0,firebase_auth__WEBPACK_IMPORTED_MODULE_0__.signOut)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_1__.auth);\r\n})\r\n\r\n\r\n\r\n\r\n// functions\r\n// m level\r\nfunction loadDefaults() {\r\n     if(window.innerWidth >= 768) {\r\n          toggleMenu(true, false);\r\n     }\r\n\r\n     menuVisualState();\r\n}\r\n\r\n\r\nfunction toggleMenu(changeDisplay, changeBackground) {\r\n     if(changeDisplay === true) {\r\n          let menuHamburgerIcon  = document.getElementById(\"menuIcon\");\r\n          let menuBox = document.getElementById(\"mMenuB\");\r\n          let menuChildClass;\r\n\r\n          let selectedMenuItems = [\r\n               document.getElementById(\"mMenu\"),\r\n               document.getElementById(\"userSec\"),\r\n               document.querySelector(\"#mMenuB .brandIcon\")\r\n          ];\r\n\r\n\r\n          if(menuBox.classList.contains(\"menuClosed\")) {\r\n               menuBox.classList.remove(\"menuClosed\");\r\n               menuBox.classList.add(\"menuOpen\");\r\n\r\n               menuHamburgerIcon.classList.remove(\"menuChildOpen\");\r\n               menuHamburgerIcon.classList.add(\"menuChildClosed\");\r\n\r\n               menuChildClass = \"menuChildOpen\";\r\n\r\n\r\n          } else {\r\n               menuBox.classList.remove(\"menuOpen\");\r\n               menuBox.classList.add(\"menuClosed\");\r\n\r\n               menuHamburgerIcon.classList.remove(\"menuChildClosed\");\r\n               menuHamburgerIcon.classList.add(\"menuChildOpen\");\r\n\r\n\r\n               menuChildClass = \"menuChildClosed\";\r\n          }\r\n\r\n          toggleLeaveMenuBox();\r\n\r\n\r\n          // add and remove classes to menu items\r\n          for(let item = 0;  item < selectedMenuItems.length;  item++) {\r\n               menuChildClass === \"menuChildOpen\" ? selectedMenuItems[item].classList.remove(\"menuChildClosed\") : selectedMenuItems[item].classList.remove(\"menuChildOpen\");          \r\n\r\n               selectedMenuItems[item].classList.add(menuChildClass);\r\n          }   \r\n     } \r\n}\r\n\r\n\r\nfunction toggleLeaveMenuBox() {\r\n     let leaveMenuButton = document.getElementById(\"leaveM\");\r\n\r\n     if(window.innerWidth >= 768 && leaveMenuButton.style.display != \"none\" || window.innerWidth < 768 && leaveMenuButton.style.display === \"none\") {\r\n          leaveMenuButton.style.display = leaveMenuButton.style.display != \"none\" ? \"none\" : \"flex\"\r\n     }\r\n}     \r\n\r\n\r\n\r\n\r\n\r\n// s level\r\nfunction menuVisualState() {\r\n     loadMenuBoxEffect()\r\n     loadNameAndType()\r\n\r\n\r\n     function loadNameAndType() {\r\n          let userName = document.getElementById(\"userName\");\r\n          let userType = document.getElementById(\"userType\");\r\n\r\n          userName.textContent = _jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__.userData.name;\r\n\r\n          userType.textContent = _jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__.userData.usertype == \"regular\"? \"Regular\" : \"Administrador\";\r\n     }\r\n\r\n\r\n     function  loadMenuBoxEffect() {\r\n          let menuSections = [\"navigate\", \"mycourses\", \"managecourses\", \"manageusers\"]\r\n\r\n          for(let elem in menuSections) {\r\n               if(window.location.href.includes(menuSections[elem])) {\r\n                    // create var\r\n                    let selMenuBox = document.getElementById(menuSections[elem]);\r\n                    let imgChange = document.querySelector(`a#${menuSections[elem]} > img`);\r\n                    \r\n                    console.log(selMenuBox);\r\n                    console.log(menuSections[elem]);\r\n     \r\n                    // css - change box and img\r\n                    selMenuBox.classList.add(\"selectedMenuBox\")\r\n     \r\n                    imgChange.setAttribute(\"src\", `../media/ico/menu/fill-${menuSections[elem]}.svg`);\r\n               }\r\n     \r\n          }\r\n     }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://compiler/./js/basic/general/jsmenu.js?");

/***/ }),

/***/ "./js/basic/managemycourses/jsmanageandmycourses.js":
/*!**********************************************************!*\
  !*** ./js/basic/managemycourses/jsmanageandmycourses.js ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _jsmycourses_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsmycourses.js */ \"./js/basic/managemycourses/jsmycourses.js\");\n/* harmony import */ var _jsmanagecourses_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jsmanagecourses.js */ \"./js/basic/managemycourses/jsmanagecourses.js\");\n/* harmony import */ var _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../general/jsuserdata.js */ \"./js/basic/general/jsuserdata.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../general/jsfirebase.js */ \"./js/basic/general/jsfirebase.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_jsmanagecourses_js__WEBPACK_IMPORTED_MODULE_1__, _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_jsmanagecourses_js__WEBPACK_IMPORTED_MODULE_1__, _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// other js\r\n\r\n\r\n\r\n\r\n\r\n// firebase\r\n\r\n\r\n\r\n\r\n\r\n// global var\r\nlet coursesData = {};\r\nlet othersData = {};\r\nlet pageType = window.location.href.includes(\"mycourses\") ? \"myCourses\" : \"manageCourses\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n// events\r\ndocument.getElementById(\"searchInp\").addEventListener(\"input\", (inputEvent) => {\r\n     showCourses(inputEvent.currentTarget.value, \"my\");\r\n     // pageType === \"manageCourses\" ? managerShowCourses() : showCourses(inputEvent.currentTarget.value);\r\n});\r\n\r\n\r\n(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_4__.db, \"courses\"), ()=> {\r\n     showCourses(undefined, \"my\");\r\n     // pageType === \"manageCourses\" ? managerShowCourses() : showCourses();\r\n});\r\n\r\n\r\n\r\n\r\n// functions\r\nasync function showCourses(searchedContent, callPurpose) {\r\n     if(await obtainAllowedCoursesData(searchedContent) === true) {\r\n          createCoursesBoxes();\r\n\r\n          if(pageType === \"manageCourses\" && callPurpose === \"my\") {\r\n               showCourses(searchedContent, \"others\");\r\n          }\r\n          \r\n     \r\n     } else {\r\n          eraseColumns()\r\n     }\r\n\r\n\r\n     // main functions\r\n     async function obtainAllowedCoursesData(searchedContent) {\r\n          callPurpose === \"others\" ? othersData = {} : coursesData = {}\r\n     \r\n          // query process\r\n          let coursesQuery = createQuery();\r\n     \r\n          let insertData = new Promise((dataObtained, noData) => {\r\n               (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.onSnapshot)(coursesQuery, (dataState) => {\r\n                    // add value to coursesData and othersData\r\n                    dataState.forEach((currentDocument)=> {\r\n                         Object.defineProperty(obtainDataSelected(callPurpose), currentDocument.id, {\r\n                              value: currentDocument.data(),\r\n                              writable: true,\r\n                              configurable: true,\r\n                              enumerable: true,\r\n          \r\n                         })\r\n                    })\r\n     \r\n     \r\n                    // is there any data obtained?\r\n                    Object.entries(obtainDataSelected(callPurpose)).length === 0 ? noData() : dataObtained();\r\n               })\r\n          })\r\n     \r\n     \r\n     \r\n          // process\r\n          let insertDataResult;\r\n     \r\n     \r\n          await insertData\r\n          .then(() => {\r\n               insertDataResult = true\r\n     \r\n          })\r\n          .catch(() => {\r\n               insertDataResult = false\r\n          })\r\n     \r\n          return insertDataResult\r\n     \r\n     \r\n          function createQuery() {\r\n               let queryResult;\r\n               let whereType = obtainPageWhere();\r\n     \r\n               if(searchedContent === undefined || searchedContent === \"\") {\r\n                    queryResult = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_4__.db, \"courses\"), whereType);\r\n     \r\n               } else {\r\n                    queryResult = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_4__.db, \"courses\"), whereType, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.where)(\"courseName\", \"==\", searchedContent));\r\n               }\r\n     \r\n               \r\n               return queryResult\r\n     \r\n     \r\n               // compl\r\n               function obtainPageWhere() {\r\n                    let whereResult;\r\n     \r\n                    if(pageType === \"myCourses\") {\r\n                         whereResult = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.where)(\"usersWithAcess\", \"array-contains\", _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__.userData.uid);\r\n     \r\n                    } else if(callPurpose != \"others\"){\r\n                         whereResult = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.where)(\"creator\", \"==\", _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__.userData.uid);\r\n                    \r\n                    } else {\r\n                         whereResult = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.where)(\"creator\", \"!=\", _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__.userData.uid);\r\n     \r\n                    }\r\n     \r\n     \r\n                    return whereResult;\r\n               }    \r\n          }\r\n     }\r\n\r\n\r\n     function createCoursesBoxes() {\r\n          let coursesColumns = callPurpose != \"others\" ? document.querySelectorAll(\"#coursesA > .coursesColumn\") : document.querySelectorAll(\"#othersA > .coursesColumn\");\r\n     \r\n     \r\n          coursesColumns.forEach((column) => {\r\n               column.innerHTML = \"\";\r\n          })\r\n     \r\n          createBoxes()\r\n     \r\n\r\n     \r\n          function createBoxes() {\r\n               Object.entries(obtainDataSelected(callPurpose)).forEach((data) => {\r\n                    // var\r\n                    let courseId = data[0];\r\n                    let courseValues = data[1];\r\n                    let selectedColumn = coursesColumns[0].childElementCount > coursesColumns[1].childElementCount? coursesColumns[1]: coursesColumns[0];\r\n     \r\n     \r\n                    let courseProperties = {\r\n                         courseBox: document.createElement(\"div\"), \r\n                         title: document.createElement(\"h1\"),\r\n                         platform: document.createElement(\"h2\"),\r\n                    }\r\n     \r\n     \r\n                    // ids and event\r\n                    courseProperties.courseBox.id = courseId;\r\n                    courseProperties.courseBox.onclick = openBox;\r\n     \r\n     \r\n                    // set data\r\n                    courseProperties.title.innerText = courseValues.courseName;\r\n                    \r\n     \r\n                    // create elements -- continue\r\n                    if(courseValues.img.length > 1) {\r\n                         courseProperties.courseBox.appendChild(createImg());\r\n                    }\r\n     \r\n                    courseProperties.courseBox.appendChild(courseProperties.title);\r\n     \r\n                    if(courseValues.coursePlatform.length > 0) {\r\n                         Object.defineProperty(courseProperties, \"platform\", {\r\n                              value: document.createElement(\"h2\"),\r\n                              configurable: true, writable: true\r\n                         });\r\n\r\n                         courseProperties.platform.innerText = `Plataforma:${courseValues.coursePlatform}`;\r\n                         courseProperties.courseBox.appendChild(courseProperties.platform);\r\n                    }\r\n                    \r\n                    selectedColumn.appendChild(courseProperties.courseBox);\r\n     \r\n     \r\n                    // compl\r\n                    function createImg() {\r\n                         let img = document.createElement(\"img\");\r\n                         img.setAttribute(\"src\", courseValues.img);\r\n     \r\n                         return img\r\n                    }\r\n               })\r\n          }  \r\n     \r\n     }\r\n\r\n\r\n     // erase columns\r\n     function eraseColumns() {\r\n          let coursesColumns;\r\n     \r\n          if(obtainDataSelected(callPurpose) === othersData) {\r\n               coursesColumns = document.querySelectorAll(\"#othersA > .coursesColumn\");\r\n     \r\n          } else {\r\n               coursesColumns = document.querySelectorAll(\"#coursesA > .coursesColumn\");\r\n          }\r\n      \r\n     \r\n          coursesColumns.forEach((column) => {\r\n               column.innerHTML = \"\";\r\n          });\r\n     }\r\n     \r\n}\r\n\r\n\r\n\r\n\r\n// open box\r\nfunction openBox(event) {  \r\n     console.log(\"open\");\r\n\r\n     let courseBox = event.currentTarget;\r\n     let courseId;\r\n     let elementData;\r\n\r\n     if(! courseBox.classList.contains(\"open\") && meetConditions(event.target)) {\r\n          let courseAreaClicked = courseBox.parentElement.parentElement.id;\r\n\r\n          courseId = courseBox.id;\r\n     \r\n          elementData = obtainDataSelected(courseAreaClicked === \"coursesA\" ? \"my\" : \"others\")[courseId];\r\n\r\n\r\n          showElements(courseId);\r\n     }\r\n     \r\n \r\n\r\n\r\n     // complementary   \r\n     function meetConditions(clickedElement) {\r\n          let temporaryDeletedCourses = document.querySelectorAll(\".coursesColumn > .canBeDeleted, .coursesColumn > .willBeDeleted\").length;\r\n\r\n\r\n          if(temporaryDeletedCourses === 0 && ! clickedElement.classList.contains(\"closeBoxButton\")) {\r\n               return true\r\n          \r\n          } else {\r\n               return false\r\n          }\r\n     }\r\n\r\n\r\n     function showElements(courseId) {\r\n          let createdContent;\r\n          let closeButton = document.createElement(\"button\");\r\n          let specialButton;\r\n\r\n          courseBox.classList.add(\"open\");\r\n\r\n          createPages();\r\n          changePage(1, courseId);\r\n\r\n\r\n\r\n        \r\n\r\n\r\n          // complementary\r\n          function createPages() {\r\n               let elementProperties = [{ email: \"E-mail\" }, { userPassword: \"Senha\"}];\r\n\r\n\r\n               // main process\r\n               setSettingsBeforeCreatingPages();\r\n               createAndAllocatePages();\r\n               setFinalSettingsAndAllocateFathers();\r\n\r\n\r\n               // complementary\r\n               function setSettingsBeforeCreatingPages() {\r\n                    if(pageType === \"myCourses\") {    \r\n                         specialButton = document.createElement(\"a\");\r\n                         specialButton.href = elementData.url;\r\n                         specialButton.target = \"_blank\";\r\n                         specialButton.innerText = \"Acessar\";\r\n     \r\n                         createdContent = document.createElement(\"div\");\r\n     \r\n                    } else {\r\n                         elementProperties.unshift({ courseName: \"Título\"}, { coursePlatform: \"Plataforma\"});\r\n\r\n                         elementProperties.push({ url: \"URL\"}, { img: \"URL da imagem\"})\r\n     \r\n                         specialButton = document.createElement(\"input\");\r\n                         specialButton.type = \"submit\";                         \r\n                         specialButton.value = \"Alterar\";\r\n     \r\n     \r\n                         createdContent = document.createElement(\"form\");\r\n                         createdContent.setAttribute(\"id\", `form${courseId}`);\r\n\r\n                         createdContent.setAttribute(\"autocomplete\", \"off\");\r\n                         createdContent.setAttribute(\"novalidate\", \"\");\r\n\r\n                         createdContent.addEventListener(\"submit\", (genericSubmitEvent) => {\r\n                              genericSubmitEvent.preventDefault();                              \r\n                              (0,_jsmanagecourses_js__WEBPACK_IMPORTED_MODULE_1__.saveCourseData)(courseId, elementData);\r\n                         \r\n                         })\r\n                    }\r\n               }\r\n\r\n\r\n\r\n               function createAndAllocatePages() {\r\n                    let temporaryCreatedPages = [];\r\n                    let pageCounter = 0;\r\n\r\n\r\n                    for(let elementCounter = 0; elementCounter < elementProperties.length; elementCounter++) {\r\n                         // increment pages -- each pair elememtCounter = new page (starting from 0)\r\n                         if(elementCounter % 2 === 0) {\r\n                              pageCounter += 1\r\n\r\n                              let temporaryPage = document.createElement(\"div\");\r\n\r\n                              temporaryPage.classList.add(\"flex-col\");\r\n                              temporaryPage.classList.add(`coursePage${pageCounter}`);\r\n                              temporaryPage.classList.add(\"aCoursePage\");\r\n\r\n                              temporaryPage.appendChild(createRegularPagesTitle(pageCounter));\r\n                         \r\n\r\n                              temporaryCreatedPages.push(temporaryPage);\r\n\r\n                              createdContent.appendChild(temporaryCreatedPages[temporaryCreatedPages.length - 1]);\r\n                         }\r\n\r\n\r\n                         let createdField = createASingleElement(elementProperties[elementCounter]);\r\n\r\n\r\n                         // allocate pages\r\n                         temporaryCreatedPages[temporaryCreatedPages.length - 1].appendChild(createdField);\r\n                    }\r\n               }\r\n\r\n\r\n               function createRegularPagesTitle(pageCounter) {\r\n                    let pageTitle = document.createElement(\"h3\");\r\n\r\n                    switch(pageCounter) {\r\n                         case 1:\r\n                              pageTitle.innerText = \"Dados do curso\";\r\n                              break;\r\n\r\n                         case 2:\r\n                              pageTitle.innerText = \"Dados do usuário\";\r\n                              break;\r\n\r\n                         case 3:\r\n                              pageTitle.innerText = \"URLS\";\r\n                              break;\r\n\r\n                         default: \r\n                              pageTitle.innerText = \"Página inexistente\";\r\n                    }\r\n\r\n\r\n                    return pageTitle\r\n               }\r\n\r\n\r\n               function createASingleElement(elementProperty) {\r\n                    // var\r\n                    let propertyString = Object.values(elementProperty);\r\n                    let propertyName = Object.keys(elementProperty);\r\n\r\n                    let temporaryName;\r\n                    let temporaryValue;\r\n                    let temporaryField;\r\n\r\n\r\n                    if(pageType === \"myCourses\") {\r\n                         temporaryField = document.createElement(\"div\");\r\n\r\n                         temporaryName = document.createElement(\"p\");\r\n                         temporaryValue = document.createElement(\"p\");\r\n\r\n                         // name Properties\r\n                         temporaryValue.innerText = elementData[propertyName];\r\n\r\n\r\n                    } else {\r\n                         temporaryField = document.createElement(\"fieldset\");  \r\n\r\n                         temporaryName = document.createElement(\"label\"); \r\n                         temporaryValue = document.createElement(\"input\");  \r\n\r\n\r\n                         // nameProperties\r\n                         temporaryName.setAttribute(\"for\", propertyName + courseId);\r\n\r\n\r\n                         // valueProperties\r\n                         temporaryValue.id =  propertyName + courseId;\r\n                         temporaryValue.name = propertyName\r\n\r\n                         temporaryValue.value = elementData[propertyName];\r\n                         temporaryValue.placeholder = elementData[propertyName];\r\n\r\n\r\n                         // fix type\r\n                         if(propertyName != \"courseName\" && propertyName != \"coursePlatform\" && propertyName != \"img\") {\r\n                              temporaryValue.type = propertyName;\r\n                         \r\n                         } else if(propertyName === \"userPassword\") {\r\n                              temporaryValue.type = \"password\"\r\n\r\n\r\n                         } else if(propertyName == \"img\") {\r\n                              temporaryValue.type = \"url\";\r\n\r\n                         } else {\r\n                              temporaryValue.type = \"text\";\r\n                         }\r\n                    }\r\n\r\n\r\n                    // nameProperties\r\n                    temporaryName.innerText = Object.values(propertyString);\r\n\r\n                    // value Properties\r\n                    temporaryName.classList.add(\"fieldName\");\r\n                    temporaryValue.classList.add(\"fieldValue\");\r\n\r\n\r\n                    // main process\r\n                    temporaryField.appendChild(temporaryName);\r\n                    temporaryField.appendChild(temporaryValue);\r\n\r\n\r\n                    return temporaryField\r\n               }\r\n\r\n\r\n               function createSteppers() {\r\n                    let createdElements = {\r\n                         stepperGroup: document.createElement(\"div\"),\r\n                         steppers: document.createElement(\"div\"),\r\n\r\n                         resetForm: document.createElement(\"input\"),\r\n                         \r\n                         stepButtons: {\r\n                              backwardStepper: document.createElement(\"input\"),\r\n                              forwardStepper: document.createElement(\"input\")\r\n                         },\r\n                         \r\n                         stepperNumber: document.createElement(\"input\"),\r\n                    }     \r\n\r\n                    setSettings()\r\n                    insertElements()\r\n                    \r\n                   \r\n                    // complementary\r\n                    function setSettings() {\r\n                         createdElements.stepperGroup.classList.add(\"stepperGroup\");\r\n                         createdElements.steppers.classList.add(\"steppers\")\r\n     \r\n                         createdElements.resetForm.setAttribute(\"type\", \"reset\");\r\n                         createdElements.resetForm.setAttribute(\"value\", \"Redefinir\");\r\n     \r\n                         createdElements.stepperNumber.setAttribute(\"type\", \"number\");\r\n                         createdElements.stepperNumber.setAttribute(\"value\", 1);\r\n                         createdElements.stepperNumber.setAttribute(\"min\", 1);\r\n                         createdElements.stepperNumber.setAttribute(\"max\", 4);\r\n\r\n                         createdElements.stepperNumber.classList.add(\"stepperNumber\");\r\n                         \r\n                         createdElements.stepperNumber.addEventListener(\"change\", (ev) => {\r\n                              let inputValue = ev.currentTarget.valueAsNumber\r\n\r\n                              if(inputValue >= 1 && inputValue < 5) {\r\n                                   changePage(ev.currentTarget.valueAsNumber, courseId);\r\n                              \r\n                              } else {\r\n                                   ev.currentTarget.valueAsNumber = 1;\r\n                              }\r\n                              \r\n                         });\r\n     \r\n     \r\n                         Object.entries(createdElements.stepButtons).forEach((stepper) => {\r\n                              // stepper[0] = names\r\n                              // stepper[1] = values / element\r\n     \r\n                              stepper[1].classList.add(stepper[0]);\r\n                              stepper[1].setAttribute(\"name\", stepper[0]);\r\n                              stepper[1].setAttribute(\"type\", \"button\");\r\n\r\n                              // changePage with steppers buttons\r\n                              stepper[1].addEventListener(\"click\", (ev) => {\r\n                                   let inputValue = createdElements.stepperNumber.valueAsNumber;\r\n\r\n                                   if(inputValue < 4 && stepper[1].classList.contains(\"forwardStepper\")) {\r\n                                        inputValue += 1\r\n\r\n                                   } else if(inputValue > 1 && stepper[1].classList.contains(\"backwardStepper\")) {\r\n                                        inputValue -= 1;\r\n     \r\n                                   }\r\n\r\n                                   createdElements.stepperNumber.valueAsNumber = inputValue;\r\n                                   changePage(inputValue, courseId);\r\n                              })\r\n                         })\r\n                    }\r\n\r\n                    function insertElements() {\r\n                         createdElements.steppers.appendChild(createdElements.stepButtons.backwardStepper);\r\n                         createdElements.steppers.appendChild(createdElements.stepperNumber);\r\n                         createdElements.steppers.appendChild(createdElements.stepButtons.forwardStepper);\r\n     \r\n                         createdElements.stepperGroup.appendChild(createdElements.resetForm);\r\n                         createdElements.stepperGroup.appendChild(createdElements.steppers);\r\n     \r\n                         createdContent.appendChild(createdElements.stepperGroup);\r\n                    }\r\n               }\r\n\r\n\r\n               function setFinalSettingsAndAllocateFathers() {\r\n                    createdContent.classList.add(\"createdContent\");\r\n                    closeButton.classList.add(\"closeBoxButton\");\r\n\r\n                    closeButton.innerText = \"Fechar\";\r\n                    closeButton.addEventListener(\"click\", closeBox);\r\n\r\n                    courseBox.appendChild(createdContent);\r\n\r\n\r\n                    // add copy button or steppers and redefine button\r\n                    if(pageType === \"myCourses\") {                      \r\n                         let fieldsThatCanBeCopied = document.querySelectorAll(`div#${courseId} > .createdContent > div > div`);\r\n\r\n                         fieldsThatCanBeCopied.forEach((selectedField) => {\r\n                              let copyButton = document.createElement(\"button\");\r\n                              copyButton.classList.add(\"copyButton\");\r\n                              copyButton.addEventListener(\"click\", _jsmycourses_js__WEBPACK_IMPORTED_MODULE_0__.copyData);\r\n\r\n                              selectedField.appendChild(copyButton);\r\n                         })\r\n                    \r\n                    } else { \r\n                         createSteppers();\r\n                         (0,_jsmanagecourses_js__WEBPACK_IMPORTED_MODULE_1__.createAcessControl)(courseId, elementData.usersWithAcess);\r\n                    } \r\n\r\n                    createdContent.appendChild(closeButton);\r\n                    createdContent.appendChild(specialButton);\r\n               }\r\n          }\r\n     }\r\n}\r\n\r\n\r\n\r\n\r\n// change page\r\n// deslocar para managecourses\r\nfunction changePage(selectedPage, courseId) {\r\n     let currentOpenPage = document.querySelector(`div#${courseId} .openPage`);  \r\n\r\n     let selectedBox = document.querySelector(`div#${courseId} > .createdContent > .coursePage${selectedPage}`);\r\n\r\n\r\n     // evitar a mesma página\r\n     if(currentOpenPage != null) {\r\n          currentOpenPage.style.display = \"none\";\r\n          currentOpenPage.classList.remove(\"openPage\");\r\n     } \r\n\r\n\r\n     selectedBox.classList.add(\"openPage\")\r\n     selectedBox.style.display = \"flex\";\r\n}\r\n\r\n\r\n\r\n\r\n// close box\r\nfunction closeBox(ev) {\r\n     let previouslyCreatedContent = ev.currentTarget.parentElement;\r\n     let courseBox = previouslyCreatedContent.parentElement;\r\n\r\n     console.log(previouslyCreatedContent);\r\n     console.log(courseBox);\r\n\r\n     previouslyCreatedContent.remove();\r\n     courseBox.classList.remove(\"open\");\r\n}\r\n\r\n\r\n\r\n\r\nfunction obtainDataSelected(callPurpose) {\r\n     if(callPurpose === \"others\") {\r\n          return othersData\r\n\r\n     } else {\r\n          return coursesData\r\n     }\r\n\r\n}   \r\n\r\n\r\n\r\n\r\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://compiler/./js/basic/managemycourses/jsmanageandmycourses.js?");

/***/ }),

/***/ "./js/basic/managemycourses/jsmanagecourses.js":
/*!*****************************************************!*\
  !*** ./js/basic/managemycourses/jsmanagecourses.js ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAcessControl: () => (/* binding */ createAcessControl),\n/* harmony export */   saveCourseData: () => (/* binding */ saveCourseData)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/jsfirebase.js */ \"./js/basic/general/jsfirebase.js\");\n/* harmony import */ var _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../general/jsuserdata.js */ \"./js/basic/general/jsuserdata.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__]);\n_general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// firebase\r\n\r\n\r\n\r\n\r\n\r\n// assign events\r\nif(document.location.href.includes(\"manage\")) {\r\n     courseBoxOperations(\"createEvents\");\r\n     acessOperations(\"createEvents\");\r\n     deleteCourses(\"createEvents\");\r\n     validateFields(\"createEvents\");\r\n\r\n     // create course\r\n     document.getElementById(\"createCourseForm\").addEventListener(\"submit\", (submitEvent) => {\r\n          submitEvent.preventDefault();\r\n          createCourse();\r\n     });\r\n}\r\n\r\n\r\n// generalVars\r\nlet createCourseBoxPage;\r\nlet deleteCourseState;\r\nlet deletedCourses = [];\r\nlet canEditAcess; \r\n\r\n\r\n// createCourseBox\r\nfunction courseBoxOperations(callReason) {\r\n     // var\r\n     let backgroundEffect = document.getElementById(\"bgEff\");\r\n     let createCourseBox = document.getElementById(\"createCourseBox\");\r\n     let returnCreateCourse = document.getElementById(\"returnCreateCourse\");\r\n\r\n\r\n     if(callReason === \"createEvents\") {\r\n          createEvents();\r\n     }\r\n\r\n\r\n     // aside\r\n     function createEvents() {\r\n          document.getElementById(\"addCourseButton\").addEventListener(\"click\", toggleCreateCourseBox);\r\n\r\n          document.getElementById(\"closeCreateCourseBox\").addEventListener(\"click\", toggleCreateCourseBox);\r\n\r\n          document.getElementById(\"returnCreateCourse\").addEventListener(\"click\", changeCourseBoxPage);\r\n\r\n          document.getElementById(\"acessB\").addEventListener(\"click\", (ev) => {\r\n               ev.preventDefault();\r\n               changeCourseBoxPage();\r\n          });\r\n          \r\n     }\r\n\r\n\r\n     // main functions\r\n     function toggleCreateCourseBox() {     \r\n          if(createCourseBox.style.display != \"block\") {\r\n               showCreateCourseBox()\r\n     \r\n          } else {\r\n               createCourseBox.style.display = \"none\";\r\n               backgroundEffect.style.display = \"none\";\r\n          }\r\n     \r\n     \r\n          // main functions\r\n          function showCreateCourseBox() {\r\n               backgroundEffect.style.display = \"flex\";\r\n               createCourseBox.style.display = \"block\";\r\n     \r\n               createCourseBoxPage = 2\r\n          \r\n               changeCourseBoxPage()\r\n          }   \r\n     }\r\n\r\n\r\n     function changeCourseBoxPage() {\r\n          let searchUserBox = document.getElementById(\"searchUserBox\");\r\n          let createCourseForm = document.getElementById(\"createCourseForm\");\r\n          let pageSubtitle = document.querySelector(\".createdBoxSubtitle\");\r\n     \r\n     \r\n          if(createCourseBoxPage === 2) {\r\n               pageSubtitle.innerText = \"Dados principais\";\r\n\r\n               returnCreateCourse.style.display = \"none\"\r\n     \r\n               searchUserBox.style.display = \"none\";\r\n               createCourseForm.style.display = \"flex\";\r\n          \r\n               createCourseBoxPage = 1;\r\n          \r\n          } else {\r\n               pageSubtitle.innerText = \"Controle do acesso\";\r\n\r\n               returnCreateCourse.style.display = \"flex\"\r\n     \r\n               createCourseForm.style.display = \"none\";\r\n               searchUserBox.style.display = \"flex\";\r\n     \r\n               createCourseBoxPage = 2;\r\n     \r\n               if(document.getElementById(\"userList\").childElementCount == 0) {\r\n                    loadUserList()\r\n               }\r\n          }\r\n     }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// userlist\r\n// var\r\nfunction loadUserList() {\r\n     let userList = document.getElementById(\"userList\");\r\n     let avoidPlayerQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_1__.usersCol, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"uid\", \"!=\", _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__.userData.uid));\r\n\r\n\r\n     (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)(avoidPlayerQuery, (dataState) => {\r\n          dataState.forEach((userInfo) => {\r\n               let requiredInfo = {\r\n                    name: userInfo.data().name,\r\n                    email: userInfo.data().email,\r\n                    uid: userInfo.data().uid\r\n               }\r\n\r\n               createUserSelectBox(requiredInfo);\r\n          })\r\n     })\r\n\r\n\r\n     // complementary\r\n     function createUserSelectBox(aUserData) {\r\n          let data = { \r\n               usernameP:  document.createElement(\"p\"),\r\n               useremailP: document.createElement(\"p\"),\r\n               genericLi: document.createElement(\"li\") \r\n          }\r\n\r\n          data.usernameP.textContent = aUserData.name;\r\n          data.useremailP.textContent = aUserData.email;\r\n\r\n          data.usernameP.classList.add(\"username\");\r\n          data.useremailP.classList.add(\"useremail\");\r\n          \r\n          data.genericLi.id = aUserData.uid;\r\n\r\n          data.genericLi.appendChild(data.usernameP);\r\n          data.genericLi.appendChild(data.useremailP);\r\n\r\n          userList.appendChild(data.genericLi);\r\n     }\r\n}\r\n\r\n\r\nfunction acessOperations(callReason) {\r\n     if(callReason === \"createEvents\") {\r\n          createEvents();\r\n     }\r\n     \r\n\r\n     // main functions\r\n     function createEvents() {\r\n          document.getElementById(\"grantAcessButton\").addEventListener(\"click\", () => {\r\n               canEditAcess = canEditAcess != true ? true : false\r\n               editAcessState(\"grant\");\r\n          });\r\n          \r\n          document.getElementById(\"removeAcessButton\").addEventListener(\"click\", () => {\r\n               canEditAcess = canEditAcess != true ? true : false\r\n               editAcessState(\"remove\")\r\n          })\r\n     }\r\n\r\n\r\n     function editAcessState(typeOfCall) { \r\n          let grantAcessButton = document.getElementById(\"grantAcessButton\");\r\n          let removeAcessButton = document.getElementById(\"removeAcessButton\");\r\n     \r\n          // main process\r\n          toggleSelectBoxes();\r\n     \r\n     \r\n          if(canEditAcess === true) {\r\n               typeOfCall === \"grant\" ? removeAcessButton.setAttribute(\"disabled\", \"\") : grantAcessButton.setAttribute(\"disabled\", \"\");\r\n          \r\n          } else {\r\n               typeOfCall === \"grant\" ? removeAcessButton.removeAttribute(\"disabled\") : grantAcessButton.removeAttribute(\"disabled\");\r\n          }\r\n     \r\n          \r\n     \r\n     \r\n          // complementary\r\n          function grantOrRemoveAcess(ev) {\r\n               let li = ev.currentTarget;\r\n     \r\n               if(li.classList.contains(\"editableBox\")) {\r\n                    typeOfCall === \"grant\" ? li.classList.add(\"acessGranted\") : li.classList.remove(\"acessGranted\");\r\n     \r\n                    li.classList.remove(\"editableBox\");   \r\n               }\r\n     \r\n               li.removeEventListener(\"click\", grantOrRemoveAcess)\r\n          }\r\n     \r\n     \r\n          function toggleSelectBoxes() {\r\n               let usersBoxes = document.querySelectorAll(\"#userList > li\");\r\n          \r\n     \r\n               for(let li = 0; li < usersBoxes.length; li ++) {\r\n                    // unselect boxes - analyze if a button is disabled\r\n                    if(usersBoxes[li].classList.contains(\"editableBox\") && (grantAcessButton.hasAttribute(\"disabled\") || removeAcessButton.hasAttribute(\"disabled\"))) {\r\n                         usersBoxes[li].classList.remove(\"editableBox\");\r\n                         // couldn\"t directly remove event listener from here.\r\n     \r\n     \r\n                    // select boxes\r\n                    } else if(typeOfCall === \"grant\" && (! usersBoxes[li].classList.contains(\"acessGranted\")) || (typeOfCall === \"remove\" && usersBoxes[li].classList.contains(\"acessGranted\"))) {\r\n     \r\n                         usersBoxes[li].classList.add(\"editableBox\");\r\n                         usersBoxes[li].addEventListener(\"click\", grantOrRemoveAcess);\r\n                    } \r\n               }\r\n          \r\n          }\r\n     }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction createCourse() {     \r\n     if(validateFields(\"multiple\") === true) {   \r\n          uploadCourse();\r\n          showMessageBox(\"successMessage\", \"Curso criado!\");\r\n     \r\n     } else {\r\n          showMessageBox(\"errorMessage\", \"Preencha corretamente todos os campos!\");\r\n     } \r\n\r\n     \r\n\r\n\r\n     function uploadCourse() {\r\n          let courseNameValue = document.getElementById(\"courseNameInp\").value;\r\n          let coursePlatformValue = document.getElementById(\"coursePlatformInp\").value;\r\n          let imgValue = document.getElementById(\"imgInp\").value;\r\n\r\n\r\n          (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"courses\", createCourseId(courseNameValue, coursePlatformValue, imgValue)), {\r\n               courseName: courseNameValue,\r\n               coursePlatform: coursePlatformValue,\r\n               \r\n               email: document.getElementById(\"emailInp\").value,\r\n               userPassword: document.getElementById(\"userPasswordInp\").value,\r\n               \r\n               url: document.getElementById(\"urlInp\").value,\r\n               img: imgValue,\r\n\r\n               creator: _general_jsuserdata_js__WEBPACK_IMPORTED_MODULE_2__.userData.uid,\r\n               usersWithAcess: obtainUsers()\r\n          })\r\n     }\r\n\r\n\r\n     function createCourseId(name, platform, img) {\r\n          let imgLetter;\r\n          let fourDigits = 0;\r\n\r\n          // consertar espaços\r\n          name = name.trim();\r\n          name = name.substring(0, 4);\r\n\r\n          platform = platform.substring(0, 4);\r\n\r\n          // fix whitespaces\r\n\r\n     \r\n          while(fourDigits < 1000 || fourDigits >= 10000) {\r\n               fourDigits = Math.floor(Math.random() * 10000);\r\n          }\r\n\r\n          // filled / empty\r\n          imgLetter = img ? \"f\" : \"e\" \r\n\r\n\r\n          // c = course\r\n          // console.log(`c${imgLetter + fourDigits + name + platform}`)\r\n          return (`c${imgLetter + fourDigits + name + platform}`);\r\n     }\r\n\r\n\r\n     function obtainUsers() {\r\n          let usersWithAcess = [];\r\n          let usersIds = document.querySelectorAll(\"#userList > .acessGranted\");\r\n\r\n          for(let iterator = 0; iterator < usersIds.length; iterator ++) {\r\n               usersWithAcess.push(usersIds[iterator].id);\r\n          }\r\n\r\n          return usersWithAcess;\r\n     }\r\n     \r\n}\r\n\r\n\r\n\r\n\r\nasync function deleteCourses(callReason) {\r\n     // var\r\n     let addCourseButton = document.getElementById(\"addCourseButton\");\r\n     let deleteCourseBox = document.getElementById(\"deleteCourseBox\");\r\n     let confirmExclusion = document.getElementById(\"confirmExclusion\");\r\n\r\n\r\n     if(callReason === \"createEvents\") {\r\n          setEventListeners();    \r\n\r\n     } else {\r\n          // main delete process\r\n          for(let actualId = 0; actualId < deletedCourses.length; actualId++) {\r\n               let temporaryDoc = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"courses\", deletedCourses[actualId]);\r\n\r\n               await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(temporaryDoc);\r\n          }\r\n\r\n          showMessageBox(\"successMessage\", \"Cursos deletados!\");\r\n     }\r\n\r\n\r\n     // aside function and events\r\n     function setEventListeners() {\r\n          // events\r\n          document.getElementById(\"deleteCourseButton\").addEventListener(\"click\", () => {\r\n               if(deleteCourseState != true) {\r\n                    deleteCourseState = true;\r\n                    selectCoursesThatWillBeDeleted();\r\n          \r\n               } else {\r\n                    openDeleteCourseBox();\r\n               }\r\n          });\r\n\r\n          confirmExclusion.addEventListener(\"click\", async () => {\r\n               closeDeleteBox(false);\r\n               await deleteCourses();\r\n\r\n               deletedCourses = [];\r\n          })\r\n          \r\n          document.getElementById(\"cancelExclusion\").addEventListener(\"click\", () => {\r\n               if(deleteCourseState === true) {\r\n                    closeDeleteBox(false);\r\n                    deletedCourses = [];\r\n               }\r\n          });\r\n          \r\n          document.getElementById(\"changeExclusion\").addEventListener(\"click\", () => {\r\n               if(deleteCourseState === true) {\r\n                    closeDeleteBox(true);\r\n               }\r\n          });\r\n     }\r\n\r\n     \r\n     // main functions\r\n     function selectCoursesThatWillBeDeleted() {\r\n          selectCourses();\r\n\r\n          deleteCourseState === true ? addCourseButton.setAttribute(\"disabled\", \"\") : addCourseButton.removeAttribute(\"disabled\");\r\n\r\n     \r\n          // complementary\r\n          function selectCourses() {\r\n               let courses = document.querySelectorAll(\".coursesColumn > div\");\r\n     \r\n               for(let i = 0; i < courses.length; i ++) {\r\n                    if(deleteCourseState === true) {\r\n                         courses[i].classList.add(\"canBeDeleted\");\r\n                         courses[i].addEventListener(\"click\", addDeletedCourseState);\r\n     \r\n                    } else {\r\n                         courses[i].removeAttribute(\"class\");\r\n                         courses[i].removeEventListener(\"click\", addDeletedCourseState);\r\n                    }\r\n               } \r\n          }\r\n     }\r\n     \r\n\r\n     function addDeletedCourseState(ev) {\r\n          let selectedBox = ev.currentTarget\r\n     \r\n          if(selectedBox.classList.contains(\"canBeDeleted\")) {\r\n               selectedBox.classList.remove(\"canBeDeleted\");\r\n               selectedBox.classList.add(\"willBeDeleted\");\r\n     \r\n          } else {\r\n               selectedBox.classList.remove(\"willBeDeleted\");\r\n               selectedBox.classList.add(\"canBeDeleted\");\r\n          }\r\n     }\r\n     \r\n\r\n     function openDeleteCourseBox() {\r\n          // process\r\n          obtainDeletedCourses();\r\n          setDeletedCoursesCounter();\r\n\r\n     \r\n          document.getElementById(\"bgEff\").style.display = \"flex\";\r\n          deleteCourseBox.style.display = \"flex\";\r\n     \r\n     \r\n          function obtainDeletedCourses() {\r\n               let coursesSelected = document.querySelectorAll(\".willBeDeleted\");\r\n               deletedCourses = [];\r\n     \r\n               coursesSelected.forEach((selectedCourse) => {\r\n                    deletedCourses.push(selectedCourse.id);\r\n               })\r\n          }\r\n     \r\n     \r\n          function setDeletedCoursesCounter() {\r\n               let deletedCoursesText = document.getElementById(\"deletedCoursesCounter\");\r\n               \r\n               if(deletedCourses.length > 0) {\r\n                    let courseComplement = deletedCourses.length > 1? \"cursos\" : \"curso\"\r\n     \r\n                    deletedCoursesText.innerText = `Deseja excluir ${deletedCourses.length} ${courseComplement}?`\r\n                    confirmExclusion.removeAttribute(\"disabled\");\r\n               \r\n               } else {\r\n                    deletedCoursesText.innerText = \"Não há cursos a serem excluídos.\"\r\n                    confirmExclusion.setAttribute(\"disabled\", \"\");\r\n               }\r\n          }\r\n     }\r\n     \r\n     function closeDeleteBox(maintain) {\r\n          document.getElementById(\"bgEff\").style.display = \"none\";\r\n          deleteCourseBox.style.display = \"none\";\r\n     \r\n          if(maintain != true) {\r\n               addCourseButton.removeAttribute(\"disabled\");   \r\n               deleteCourseState = false;\r\n     \r\n               document.querySelectorAll(\".canBeDeleted, .willBeDeleted\").forEach((selectedElement) => {\r\n                    selectedElement.removeAttribute(\"class\");\r\n                    selectedElement.removeEventListener(\"click\", addDeletedCourseState);\r\n     \r\n               })\r\n          } \r\n     }\r\n}\r\n\r\n\r\n\r\n\r\n// validate\r\nfunction validateFields(callParameter, selectedInput) {\r\n     switch(callParameter) {\r\n          case \"createEvents\": \r\n               createEvents();\r\n               break\r\n\r\n          case \"single\":\r\n               validateSingleInput();\r\n               break\r\n\r\n          case (\"multiple\"):\r\n               return finishValidation() === true ? true : false\r\n\r\n          default:\r\n               console.log(\"Something unexpected on validating inputs ocurred. A wrong call was been received.\")\r\n     }\r\n\r\n\r\n\r\n     function createEvents() {\r\n          let createFormFields = document.querySelectorAll(\"#createCourseForm > .contentFieldset > input\");\r\n          createFormFields = Array.from(createFormFields);\r\n\r\n          for(let i = 0; i < createFormFields.length; i++) {\r\n               createFormFields[i].onchange = () => {\r\n                    validateFields(\"single\", createFormFields[i]);\r\n               };\r\n          }\r\n     }\r\n\r\n\r\n     function validateSingleInput() {\r\n          let inputValue = selectedInput.value;\r\n          let regularExpression;\r\n\r\n          switch(selectedInput.name) {\r\n               case \"name\":\r\n                    regularExpression = /[\\w]{2,}/;\r\n                    break;\r\n\r\n               case \"email\":\r\n                    regularExpression = /[\\w]{2,}[@][a-z]{2,}[.][a-z]{2,}/;\r\n                    break;\r\n\r\n               case \"password\":\r\n                    regularExpression = /[\\w\\d]{4,}/;\r\n                    break;\r\n\r\n\r\n               case \"aUrl\":\r\n                    regularExpression = /https?:\\/\\/.+\\..+/;\r\n                    break;\r\n\r\n               default: \r\n                    regularExpression = /.{1,}/\r\n\r\n          }\r\n\r\n          if(regularExpression.test(inputValue) === true) {\r\n               selectedInput.classList.add(\"correctInput\");\r\n\r\n          } else if(selectedInput.classList.contains(\"correctInput\")) {\r\n               selectedInput.classList.remove(\"correctInput\");\r\n          }\r\n     }\r\n\r\n\r\n     function finishValidation() {\r\n          let selectedArea = \"#createCourseForm\"\r\n          let filledInputs = document.querySelectorAll(`${selectedArea} .requiredInput.correctInput`);\r\n          let minLength = document.querySelectorAll(`${selectedArea} .requiredInput`).length;\r\n\r\n          return filledInputs.length === minLength ? true : false\r\n     }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// save course data\r\nasync function saveCourseData(courseIdentifier, oldData) {\r\n     let obtainedNewData = obtainEditedCourseData();\r\n\r\n     if(Object.keys(obtainedNewData).length > 0) {\r\n          let docThatWillBeUpdated = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_1__.db, \"courses\", courseIdentifier);\r\n\r\n          await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(docThatWillBeUpdated, obtainedNewData);\r\n     }\r\n\r\n     \r\n     // complementary\r\n     function obtainEditedCourseData() {\r\n          let finalCourseData = {};\r\n\r\n          verifyAndPushEditedData();\r\n\r\n          return finalCourseData\r\n\r\n\r\n          // aside\r\n          function verifyAndPushEditedData() {\r\n               Object.entries(oldData).forEach((field) => {     \r\n                    let fieldName = field[0];\r\n                    let fieldValue = field[1];\r\n                    let analyzedElementValue;\r\n               \r\n                    \r\n                    // set analyzed element value\r\n                    if(fieldName != \"usersWithAcess\" && fieldName != \"creator\") {               \r\n                         analyzedElementValue = document.getElementById(fieldName + courseIdentifier).value;                    \r\n\r\n                    } else if(fieldName === \"usersWithAcess\") {\r\n                         // array from node list\r\n                         let usersWithAcessList = Array.from(document.querySelectorAll(`#${courseIdentifier} .acessEditToggled`));\r\n\r\n\r\n                         for(let i = 0; i < usersWithAcessList.length; i++) {\r\n                              // remove edit + course identifier to obtain user id\r\n                              usersWithAcessList[i] = usersWithAcessList[i].id.slice(courseIdentifier.length + 4);\r\n                         }\r\n\r\n                         analyzedElementValue = usersWithAcessList;\r\n                    } \r\n\r\n                    \r\n                    // set changed values\r\n                    if(fieldName != \"creator\" && fieldValue != analyzedElementValue ) {                             \r\n                         Object.defineProperty(finalCourseData, fieldName, {\r\n                              value: analyzedElementValue,\r\n                              enumerable: true\r\n                         });\r\n                    }\r\n                    \r\n               })\r\n\r\n          }\r\n     \r\n          \r\n     }\r\n}\r\n\r\n\r\n\r\n// create acess control and user list on edit box\r\nasync function createAcessControl(courseIdentifier, usersWithAcessInCourse) {\r\n     // var\r\n     let acessControl = document.createElement(\"div\");\r\n     let acessList = document.createElement(\"ul\");\r\n\r\n\r\n     // properties\r\n     acessControl.classList.add(\"acessControl\", \"coursePage4\", \"aCoursePage\");\r\n     acessList.classList.add(\"thisCourseAcess\");\r\n\r\n     \r\n     await createList();\r\n\r\n     if(usersWithAcessInCourse.length > 0) {\r\n          toggleUsersWithAcess();\r\n     }\r\n     \r\n\r\n\r\n     async function createList() {  \r\n          let createdContent;\r\n          let stepperGroup;\r\n          \r\n          let acessControlPageTitle = document.createElement(\"h3\");\r\n          acessControlPageTitle.innerText = \"Usuários com acesso\"\r\n\r\n          \r\n          await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(_general_jsfirebase_js__WEBPACK_IMPORTED_MODULE_1__.usersCol)\r\n          .then((currentSnapshot) => {\r\n               currentSnapshot.forEach((user) => {\r\n                    let selectedUserData = user.data()\r\n                    let temporaryUserBox = document.createElement(\"li\");\r\n\r\n                    temporaryUserBox.addEventListener(\"click\", () => {\r\n                         changeThisUserAcess(temporaryUserBox);\r\n                    });\r\n\r\n                    temporaryUserBox.innerText = selectedUserData.email;\r\n                    temporaryUserBox.id = \"edit\" + courseIdentifier + selectedUserData.uid;\r\n               \r\n                    acessList.appendChild(temporaryUserBox);\r\n               })\r\n\r\n\r\n               createdContent = document.querySelector(`div#${courseIdentifier} > .createdContent`);\r\n\r\n               stepperGroup = document.querySelector(`div#${courseIdentifier} > .createdContent > .stepperGroup`);\r\n          })\r\n\r\n          .catch((errorMsg) => {\r\n               console.log(errorMsg);\r\n          })\r\n\r\n          acessControl.appendChild(acessControlPageTitle)\r\n          acessControl.appendChild(acessList);\r\n\r\n          createdContent.insertBefore(acessControl, stepperGroup);\r\n     }\r\n     \r\n\r\n     function changeThisUserAcess(userBoxClicked) {\r\n          userBoxClicked.classList.contains(\"acessEditToggled\") ? userBoxClicked.removeAttribute(\"class\") : userBoxClicked.classList.add(\"acessEditToggled\");\r\n     }\r\n\r\n\r\n     function toggleUsersWithAcess() {\r\n          for(let userWithAcess = 0; userWithAcess < usersWithAcessInCourse.length; userWithAcess ++) {\r\n               let selectedBoxId = `edit${courseIdentifier + usersWithAcessInCourse[userWithAcess]}`;\r\n               \r\n               document.getElementById(selectedBoxId).classList.add(\"acessEditToggled\");\r\n          }\r\n\r\n     }\r\n}\r\n\r\n\r\n\r\n\r\n// show message box\r\nfunction showMessageBox(messageType, message) {\r\n     let messageBox = document.querySelector(\".messageBox\");\r\n     let closeButton;\r\n\r\n     if(messageBox) {\r\n          messageBox.remove();\r\n     }\r\n\r\n\r\n     messageBox = createMessageBox();\r\n     defineCustomElements();\r\n\r\n\r\n     function createMessageBox() {\r\n          let mainSiteContent = document.getElementById(\"mCon\");\r\n\r\n          let createdMessageBox = document.createElement(\"div\");\r\n          createdMessageBox.classList.add(\"messageBox\", \"bAll\");\r\n\r\n          closeButton = document.createElement(\"button\");\r\n          closeButton.classList.add(\"closeMessageBox\");\r\n\r\n\r\n          closeButton.addEventListener(\"click\", () => {\r\n               createdMessageBox.remove();\r\n          });\r\n\r\n\r\n          createdMessageBox.appendChild(closeButton);\r\n          mainSiteContent.appendChild(createdMessageBox);\r\n\r\n\r\n          return  createdMessageBox;\r\n     }\r\n\r\n\r\n     function defineCustomElements() {\r\n          let messageParagraph = document.createElement(\"p\");\r\n          messageParagraph.innerText = message;\r\n\r\n          messageBox.classList.add(messageType);\r\n          messageBox.insertBefore(messageParagraph, closeButton);\r\n     }\r\n\r\n\r\n}\r\n\r\n\r\n// exports\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://compiler/./js/basic/managemycourses/jsmanagecourses.js?");

/***/ }),

/***/ "./js/basic/managemycourses/jsmycourses.js":
/*!*************************************************!*\
  !*** ./js/basic/managemycourses/jsmycourses.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copyData: () => (/* binding */ copyData)\n/* harmony export */ });\nconsole.log(\"myCourses acessado!\");\r\n\r\nfunction copyData(ev) {\r\n     let fieldValue = ev.currentTarget.parentElement.children[1].innerText;\r\n     navigator.clipboard.writeText(fieldValue);\r\n}\r\n\r\n\n\n//# sourceURL=webpack://compiler/./js/basic/managemycourses/jsmycourses.js?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./js/basic/general/jsmenu.js"), __webpack_exec__("./js/basic/managemycourses/jsmanageandmycourses.js"), __webpack_exec__("./js/basic/managemycourses/jsmanagecourses.js"));
/******/ }
]);