@charset "UTF-8";

/* operations area / add + create courses */
#operationsA {
     flex-flow: column wrap;
     align-self: center;

     gap: 10px;
     margin-bottom: 0px;

     width: 100%;     
}

#operationsA button {
     width: 100%;

     padding: 10px;
     background-color: var(--uiPrimaryGrey);

     cursor: pointer;
}

#addCourseButton {
     border: none;
     color: var(--primaryColor);
}

#addCourseButton:disabled {
     opacity: 0.25;
}


#deleteCourseButton {
     border: none;
     color: var(--primaryOpposite);
}

#operationsA button:hover {
     opacity: 0.75;
}

#operationsA button:active {
     background-color: var(--uiSecondaryGrey);
}


#bgEff {    
     justify-content: center;
     overflow: scroll;

     z-index: 1;
}


/* edit courses box */
.createdContent > div {
     flex-flow: column wrap;
}


.createdContent > div > fieldset:has(.fieldValue:focus) {
     border-bottom: 1px solid var(--uiPrimaryWhite);
}




/* field values */
input.fieldValue {
     width: 100%;     
     margin-bottom: 0px;
     padding-bottom: 15px;

     background-color: transparent;
     border: none;
}




/* steppers and redefine button */
div.stepperGroup {
     display: flex;
     flex-flow: row wrap;

     justify-content: space-between;
     margin-top: 20px;
}

.stepperGroup > input[type=reset] {
     padding: 0px;

     color: var(--secondaryOpposite);
     background-color: transparent;

     border: none;
     
     cursor: pointer;
     transition: all 500ms;
}

.stepperGroup > input[type=reset]:hover {
     color: var(--primaryOpposite);
}


.steppers {
     display: flex;
     gap: 5px;
     align-items: center;
}


.stepperNumber {
     width: 20px;
     text-align: center;

     font-size: 2em;

     color: var(--uiPrimaryWhite);
     background-color: transparent;
     border: none;
}


.stepperNumber:focus {
     outline: none;
}

.steppers > input[type=button] {
     width: 20px;

     background-repeat: no-repeat;
     background-size: contain;
     background-color: transparent;

     border: none;
     border-radius: 0px;

     cursor: pointer;
}

.forwardStepper {
     background-image: url(../../../media/ico/mcourses/stepperforward.svg);
     margin-left: 5px;
}

.backwardStepper {
     background-image: url(../../../media/ico/mcourses/stepperbackward.svg);
}



/* acess control */
.acessControl {
     overflow: hidden;
}

.thisCourseAcess {
     display: flex;
     flex-flow: column nowrap;

     gap: 10px;
     
     max-height: 165px;

     /* min-width === width e === 100%, para ocupar o tamanho de acess control e torná-lo intransponível, bem como conservar esse width (width: 100%) */
     min-width: 100%;
     width: 100%;
     max-width: 50vw;

     overflow: scroll;
}

.thisCourseAcess > li {
     display: flex;
     align-items: center;     

     height: 40px;
     padding: 20px 25px;

     cursor: pointer;

     color: var(--uiPrimaryWhite);

     border: 1px solid var(--uiSecondaryGrey);
     border-radius: 15px;

     word-break: keep-all;
     text-overflow: ellipsis;
     overflow: hidden;
}

.thisCourseAcess > .acessEditToggled {
     color: var(--primaryColor);
     border-color: var(--tertiaryColor);
}



/* create courses area */
.coursesColumn > div.canBeDeleted, .coursesColumn > div.willBeDeleted {
     outline: 1px solid var(--primaryOpposite);
}

.coursesColumn > div.willBeDeleted {
     outline: none;
     background-color: var(--quaternaryOpposite);
     /* background-color: var(--tertiaryOpposite); */
}



/* modals /////////////*/
.manageCoursesModalPageCSS {
     width: 100%;
}

/* create course box //*/
.createdBox, #createCourseForm, .manageCoursesPageCSS {
     display: none;
}

.createdBox {
     width: 80vw;
     max-width: 500px;
     
     height: fit-content;
     
     padding: 50px;
     /* margin: 50px min(10vw, 50px); */
     margin-top: 50px;

     color: var(--uiSecondaryWhite);
     background-color: var(--uiSecondaryBlack);

     border-radius: 15px;
}

#createCourseModal > .createdBoxTitle h1 {
     color: var(--uiPrimaryWhite);
     
}


#createCourseModal .cancelModalButton {
     aspect-ratio: 1;
     max-width: 25px;
     height: fit-content;

     /* border: none; */
     cursor: pointer;
     border: none;

     background: url(../../../media/ico/closeicon.png) no-repeat;
     background-size: contain;
}


/* text */
.createdBox div > h1 {
     font: 600 min(7vw, 2.25em) var(--rFont);
     color: var(--uiPrimaryWhite);
}

.createdBoxTitle .createdBoxSubtitle {
     font: 200 1em var(--rFont);
}

#createCourseForm h3 {
     color: var(--uiPrimaryWhite);
     font-weight: 700;
     margin-bottom: 20px;
}


/* form */
#createCourseForm {
     flex-flow: column wrap;
     gap: 40px;
}

#createCourseForm fieldset {
     border: none;
}


/* inputs */
#createCourseForm label {
     color: var(--uiPrimaryWhite);
     font-weight: 300;
}

.contentFieldset > input {  
     width: 100%;

     margin-bottom: 20px;
     padding-bottom: 10px;

     font: 500 1em var(--rFont);
     color: var(--uiPrimaryWhite);

     background-color: transparent;
     border-color: transparent transparent var(--uiSecondaryGrey) transparent;
}

#createCourseForm > .contentFieldset input:focus {
     outline: none;
     border-bottom-color: var(--uiPrimaryWhite);
}

/* correct input */
#createCourseForm .correctInput {
     color: var(--secondaryColor);
     border-bottom-color: var(--tertiaryColor);
}

#createCourseForm label:has(+ .correctInput) {
     color: var(--uiSecondaryWhite);
}


/* buttons */
.modalPageChange {
     background-color: var(--uiSecondaryWhite);
     padding: 15px;

     border: none;
     text-align: center;
     font-weight: 600;
}

.modalPageChange:hover {
     color: var(--uiPrimaryBlack);
     background-color: var(--uiPrimaryWhite);
}

/* user list */
#userList {
     flex-flow: column nowrap;

     gap: 10px;

     height: fit-content;
     max-height: 400px;
     width: 100%;

     margin-bottom: 50px;
     border: 1px solid blue;

     overflow: scroll;
}

#userList > li {
     padding: 15px;
     background-color: var(--uiPrimaryGrey);
}

#userList > li > p {
     overflow: hidden;
     text-overflow: ellipsis;
     white-space: nowrap;

     width: 40vw;
     max-width: 100%;
}

#userList .username {
     font-weight: 600;
}

#userList .useremail {
     font-weight: 200;
}


/* list buttons */
#grantAcessButtons {
     gap: 10px;
     margin-bottom: 20px;
}

.changeAcessButton {
     background-color: transparent;
     width: 100%;
}

.changeAcessButton:disabled {
     opacity: 0.5;
}

#removeAcessButton:hover, #grantAcessButton:hover {
     font-weight: 600;
     color: var(--uiPrimaryBlack);
}

#removeAcessButton {
     color: var(--primaryOpposite);
     border: 1px solid var(--primaryOpposite);
}

#removeAcessButton:hover {
     background-color: var(--primaryOpposite);
}


#grantAcessButton {
     color: var(--primaryColor);
     border: 1px solid var(--primaryColor);
}

#grantAcessButton:hover {
     background-color: var(--primaryColor);
}



/* users boxes */
#userList > .editableBox {
     outline: 1px solid var(--uiPrimaryWhite);
     cursor: pointer;
}

#userList > .acessGranted {
     background-color: var(--quaternaryColor);
}


/* both delete and add box properties */
/* buttons */
.createdBoxButtons{
     gap: 10px;
}

.createdBoxButtons > input, .createdBoxButtons > button {
     /* gap = 10px -> gap for each: 5px */
     width: calc(50% - 5px);
     height: 50px;

     cursor: pointer;
}

.resetButtonStyle {
     color: var(--uiSecondaryWhite);
     background-color: transparent;
     border: 1px solid var(--uiSecondaryGrey);
}

.resetButtonStyle:hover {
     color: var(--uiPrimaryWhite);
     border-color: var(--uiSecondaryGrey);
}

.resetButtonStyle:active {
     border-color: var(--uiPrimaryWhite);
     transition: none 0s;
}


.confirmButtonStyle {
     background-color: transparent;

     color: var(--secondaryColor);
     border: 1px solid var(--secondaryColor);
}

.confirmButtonStyle:hover {
     color: var(--primaryColor);
     border-color: var(--primaryColor);
}

.confirmButtonStyle:active {
     color: var(--uiPrimaryBlack);
     background-color: var(--primaryColor);
     transition: none 0ms;
}




/* delete course box */
/* text */
#deleteCourseModal {
     margin-top: 100px;
     max-width: 400px;
}

#deleteCourseModal > .createdBoxTitle > h1 {
     color: var(--primaryOpposite);
     margin-bottom: 10px;
}



/* buttons */
#deleteCourseModal > .createdBoxButtons {
     margin-top: 50px;
}

#confirmExclusion {     
     background-color: transparent;

     color: var(--primaryOpposite);
     border: 1px solid var(--primaryOpposite);
}

#confirmExclusion:hover {
     color: var(--uiPrimaryWhite);
     background-color: var(--primaryOpposite);
}

#confirmExclusion:disabled {
     opacity: 0.60;
}

#cancelExclusion {
     margin-top: 10px;
     
     padding: 25px;

     color: var(--uiPrimaryWhite);
     background-color: var(--uiPrimaryGrey);
     border: none;
     cursor: pointer;
}

#cancelExclusion:hover {
     background-color: var(--uiSecondaryGrey);
}




/* media */
@media screen and (min-width: 768px) {
     #operationsA {
          flex-flow: row wrap;
          width: 100%;
     }

     #operationsA button {
          width: calc(50% - 5px);
          padding: 10px;
     }

     #cancelExclusion {
          padding: 15px;
     } 

}